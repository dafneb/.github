name: Snyk Code Scan (Python)

on:
  workflow_call:
    secrets:
      SNYK_TOKEN:
        required: true

permissions:
  contents: read

jobs:
  security:
    name: Snyk Code Scan (Python)
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        continue-on-error: true
      - name: Authenticate to Snyk
        uses: snyk/actions/python@28606799782bc8e809f4076e9f8293bc4212d05e
        with:
          command: auth
          args: $SNYK_TOKEN
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Monitor dependencies with Snyk
        uses: snyk/actions/python@28606799782bc8e809f4076e9f8293bc4212d05e
        with:
          command: monitor
          args: --all-projects --detection-depth=5
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@28606799782bc8e809f4076e9f8293bc4212d05e
        continue-on-error: true # To make sure that SARIF upload gets called even if there are vulnerabilities
        with:
          args: --sarif-file-output=snyk.sarif --all-projects --detection-depth=5
      - name: Upload result to GitHub Code Scanning
        if: ${{ hashFiles('**/snyk.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8 # v3.29.4
        with:
          sarif_file: snyk.sarif
          category: "snyk-python"
