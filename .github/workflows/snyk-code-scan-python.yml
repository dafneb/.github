name: Snyk Code Scan (Python)

on:
  workflow_call:

permissions:
  contents: read

jobs:
  security:
    name: Snyk Code Scan (Python)
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Monitor dependencies with Snyk
        uses: snyk/actions/python@cdb760004ba9ea4d525f2e043745dfe85bb9077e # Sep 6, 2024 - Verified
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --all-projects --detection-depth=5
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@cdb760004ba9ea4d525f2e043745dfe85bb9077e # Sep 6, 2024 - Verified
        continue-on-error: true # To make sure that SARIF upload gets called even if there are vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif --all-projects --detection-depth=5
      - name: Upload result to GitHub Code Scanning
        if: ${{ hashFiles('**/snyk.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@39edc492dbe16b1465b0cafca41432d857bdb31a # v3.29.1
        with:
          sarif_file: snyk.sarif
          category: "snyk-python"
