name: Snyk Container Scan

on:
  workflow_call:
    inputs:
      working_directory:
        required: false
        type: string
        default: "."
      image_name:
        required: true
        type: string

permissions:
  contents: read

env:
  wrk_dir: ${{ inputs.working_directory }}
  img: ${{ inputs.image_name }}

jobs:
  security:
    name: Snyk Container Scan
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check directory
        run: |
          if [ ! -d "$WRK_DIR" ]
          then
            echo "Directory $WRK_DIR does not exist."
            exit 1
          fi
        shell: bash
        env:
          WRK_DIR: ${{ env.wrk_dir }}
      - name: Check Dockerfile
        run: |
          if [ ! -f "$WRK_DIR/Dockerfile" ]
          then
            echo "Dockerfile not found in $WRK_DIR."
            exit 1
          fi
        shell: bash
        env:
          WRK_DIR: ${{ env.wrk_dir }}
      - name: Check Docker image name
        run: |
          if [[ ! "$IMG" =~ ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*(\/[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)*$ ]]
          then
            echo "Image name is not correct."
            exit 1
          fi
        shell: bash
        env:
          IMG: ${{ env.img }}
      - name: Build a Docker image
        run: |
          docker build -t $IMG $WRK_DIR
        shell: bash
        env:
          IMG: ${{ env.img }}
          WRK_DIR: ${{ env.wrk_dir }}
      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@28606799782bc8e809f4076e9f8293bc4212d05e # Sep 6, 2024 - Verified
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.img }}
          args: --file=${{ env.wrk_dir }}/Dockerfile
      - name: Upload result to GitHub Code Scanning
        if: ${{ hashFiles('**/snyk.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@181d5eefc20863364f96762470ba6f862bdef56b # v3.29.2
        with:
          sarif_file: snyk.sarif
          category: "snyk-container"
