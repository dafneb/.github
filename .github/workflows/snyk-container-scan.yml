name: Snyk Container Scan

on:
  workflow_call:
    inputs:
      working_directory:
        required: false
        type: string
        default: "."
      image_name:
        required: true
        type: string
    secrets:
      SNYK_TOKEN:
        required: true

permissions:
  contents: read

env:
  wrk_dir: ${{ inputs.working_directory }}
  img: ${{ inputs.image_name }}

jobs:
  security:
    name: Snyk Container Scan
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check directory
        run: |
          if [ ! -d "$WRK_DIR" ]
          then
            echo "Directory $WRK_DIR does not exist."
            exit 1
          fi
        shell: bash
        env:
          WRK_DIR: ${{ env.wrk_dir }}
      - name: Check Dockerfile
        run: |
          if [ ! -f "$WRK_DIR/Dockerfile" ]
          then
            echo "Dockerfile not found in $WRK_DIR."
            exit 1
          fi
        shell: bash
        env:
          WRK_DIR: ${{ env.wrk_dir }}
      - name: Check Docker image name
        run: |
          if [[ ! "$IMG" =~ ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*(\/[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)*$ ]]
          then
            echo "Image name is not correct."
            exit 1
          fi
        shell: bash
        env:
          IMG: ${{ env.img }}
      - name: Build a Docker image
        run: |
          docker build -t $IMG $WRK_DIR
        shell: bash
        env:
          IMG: ${{ env.img }}
          WRK_DIR: ${{ env.wrk_dir }}
      - name: Install Snyk CLI
        uses: snyk/actions/setup@e2221410bff24446ba09102212d8bc75a567237d
      - name: Authenticate to Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Run Snyk to check Docker image for vulnerabilities
        run: |
          snyk container test $IMG --file=${{ env.wrk_dir }}/Dockerfile --sarif-file-output=snyk.sarif
        continue-on-error: true # To make sure that SARIF upload gets called even if there are vulnerabilities
      - name: Generate and store SBOM
        run: |
          snyk container sbom $IMG --file=${{ env.wrk_dir }}/Dockerfile --format=cyclonedx1.4+json > sbom.json
      - name: Upload result to GitHub Code Scanning
        if: ${{ hashFiles('**/snyk.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
          category: "snyk-container"
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
